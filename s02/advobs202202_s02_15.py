#!/usr/pkg/bin/python3.9

#
# Time-stamp: <2022/02/24 23:21:01 (CST) daisuke>
#

# importing argparse module
import argparse

# importing sys module
import sys

# importing datetime module
import datetime

# importing numpy module
import numpy

# importing astropy module
import astropy.io.fits

# constructing parser object
desc = 'generating a synthetic image'
parser = argparse.ArgumentParser (description=desc)

# adding command-line arguments
parser.add_argument ('-b', '--background', type=float, default=1000.0, \
                     help='background level (default: 1000)')
parser.add_argument ('-s', '--sigma', type=float, default=10.0, \
                     help='noise level (default: 10)')
parser.add_argument ('-x', '--xsize', type=int, default=512, \
                     help='image size in x-axis (default: 512)')
parser.add_argument ('-y', '--ysize', type=int, default=512, \
                     help='image size in y-axis (default: 512)')
parser.add_argument ('-o', '--output', default='', \
                     help='output file name')

# command-line argument analysis
args = parser.parse_args ()

# input parameters
sky_background = args.background
noise          = args.sigma
image_size_x   = args.xsize
image_size_y   = args.ysize
file_output    = args.output

# if file name is not given, then stop the script
if (file_output == ''):
    print ("File name is not given.")
    print ("Use -o option to specify output file name.")
    print ("Exiting...")
    sys.exit ()

# image size
image_size = (image_size_x, image_size_y)

# date/time of now
datetime_now = datetime.datetime.utcnow ()
datetime_str = "%04d-%02d-%02dT%02d:%02d:%06.3f" \
    % (datetime_now.year, datetime_now.month, datetime_now.day, \
       datetime_now.hour, datetime_now.minute, \
       datetime_now.second + datetime_now.microsecond * 10**-6)

# initialisation of random number generator
rng = numpy.random.default_rng ()
# generation of numpy array of size (image_size_x, image_size_y)
array_image = rng.normal (loc=sky_background, scale=noise, size=image_size)

# making a header
header = astropy.io.fits.PrimaryHDU ().header
header['history'] = "generated on %s" % datetime_str
header['comment'] = "synthetic image generated by command \"%s\"" % sys.argv[0]
header['comment'] = "image generation parameters:"
header['comment'] = "  image size in X      = %d" % image_size_x
header['comment'] = "  image size in Y      = %d" % image_size_y
header['comment'] = "  mean sky background  = %f" % sky_background
header['comment'] = "  stddev of background = %f" % noise

# writing a FITS file
astropy.io.fits.writeto (file_output, array_image, header=header)
